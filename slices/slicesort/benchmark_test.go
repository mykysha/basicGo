package slicesort

import (
	"github.com/nndergunov/basicGo/slices/slicesort/algorythms"
	"testing"
)

func BenchmarkBuiltIn(b *testing.B) {
	slice := []int{
		65, 82, 29, 87, 48, 39, 37, 95, 70, 33, 24, 38, 75, 7, 79, 51, 94, 85,
		93, 41, 81, 90, 14, 18, 84, 52, 23, 62, 22, 78, 97, 96, 10, 9, 42, 20,
		46, 58, 73, 68, 61, 57, 99, 5, 71, 59, 1, 8, 26, 72, 86, 64, 76, 31, 16,
		12, 74, 40, 35, 0, 36, 49, 21, 47, 53, 91, 50, 54, 15, 17, 3, 2, 89, 11,
		4, 55, 19, 69, 83, 43, 44, 63, 66, 27, 92, 13, 98, 6, 25, 56, 45, 32, 28,
		67, 60, 100, 88, 30, 80, 77,
	}

	b.ResetTimer()

	_ = algorythms.BuiltInSort(slice)
}

func BenchmarkSelection(b *testing.B) {
	slice := []int{
		65, 82, 29, 87, 48, 39, 37, 95, 70, 33, 24, 38, 75, 7, 79, 51, 94, 85,
		93, 41, 81, 90, 14, 18, 84, 52, 23, 62, 22, 78, 97, 96, 10, 9, 42, 20,
		46, 58, 73, 68, 61, 57, 99, 5, 71, 59, 1, 8, 26, 72, 86, 64, 76, 31, 16,
		12, 74, 40, 35, 0, 36, 49, 21, 47, 53, 91, 50, 54, 15, 17, 3, 2, 89, 11,
		4, 55, 19, 69, 83, 43, 44, 63, 66, 27, 92, 13, 98, 6, 25, 56, 45, 32, 28,
		67, 60, 100, 88, 30, 80, 77,
	}

	b.ResetTimer()

	_ = algorythms.SelectionSort(slice)
}

func BenchmarkBubble(b *testing.B) {
	slice := []int{
		65, 82, 29, 87, 48, 39, 37, 95, 70, 33, 24, 38, 75, 7, 79, 51, 94, 85,
		93, 41, 81, 90, 14, 18, 84, 52, 23, 62, 22, 78, 97, 96, 10, 9, 42, 20,
		46, 58, 73, 68, 61, 57, 99, 5, 71, 59, 1, 8, 26, 72, 86, 64, 76, 31, 16,
		12, 74, 40, 35, 0, 36, 49, 21, 47, 53, 91, 50, 54, 15, 17, 3, 2, 89, 11,
		4, 55, 19, 69, 83, 43, 44, 63, 66, 27, 92, 13, 98, 6, 25, 56, 45, 32, 28,
		67, 60, 100, 88, 30, 80, 77,
	}

	b.ResetTimer()

	_ = algorythms.BubbleSort(slice)
}

func BenchmarkPancake(b *testing.B) {
	slice := []int{
		65, 82, 29, 87, 48, 39, 37, 95, 70, 33, 24, 38, 75, 7, 79, 51, 94, 85,
		93, 41, 81, 90, 14, 18, 84, 52, 23, 62, 22, 78, 97, 96, 10, 9, 42, 20,
		46, 58, 73, 68, 61, 57, 99, 5, 71, 59, 1, 8, 26, 72, 86, 64, 76, 31, 16,
		12, 74, 40, 35, 0, 36, 49, 21, 47, 53, 91, 50, 54, 15, 17, 3, 2, 89, 11,
		4, 55, 19, 69, 83, 43, 44, 63, 66, 27, 92, 13, 98, 6, 25, 56, 45, 32, 28,
		67, 60, 100, 88, 30, 80, 77,
	}

	b.ResetTimer()

	_ = algorythms.PancakeSort(slice)
}

func BenchmarkRecursiveBubble(b *testing.B) {
	slice := []int{
		65, 82, 29, 87, 48, 39, 37, 95, 70, 33, 24, 38, 75, 7, 79, 51, 94, 85,
		93, 41, 81, 90, 14, 18, 84, 52, 23, 62, 22, 78, 97, 96, 10, 9, 42, 20,
		46, 58, 73, 68, 61, 57, 99, 5, 71, 59, 1, 8, 26, 72, 86, 64, 76, 31, 16,
		12, 74, 40, 35, 0, 36, 49, 21, 47, 53, 91, 50, 54, 15, 17, 3, 2, 89, 11,
		4, 55, 19, 69, 83, 43, 44, 63, 66, 27, 92, 13, 98, 6, 25, 56, 45, 32, 28,
		67, 60, 100, 88, 30, 80, 77,
	}

	l := len(slice) - 1

	b.ResetTimer()

	_ = algorythms.RecursiveBubbleSort(slice, l)
}

